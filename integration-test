#!/bin/sh

expect_eq() {
  expected=$1
  actual=$2
  if [ ! x"$expected" = x"$actual" ]
  then
    echo "Expected:"
    echo "$1"
    echo "Actual:"
    echo "$2"
    echo "[  FAILED  ]"
    exit 1
  else
    echo -n .
  fi
}

expect_exit_code() {
  code=$1
  shift
  $* >/dev/null 2>&1
  actual=$?
  if [ $code -ne $actual ]
  then
    echo "Bad exit. Expected:"
    echo $code
    echo "Actual:"
    echo $actual
    echo "[  FAILED  ]"
    exit 1
  else
    echo -n .
  fi
}

make primes >/dev/null 2>&1

expect_eq 11 $(./primes | wc -l)

expect_eq $'  29  58  87 145 203 319 377 493 551 667 841' "$(./primes | tail -n1)"

expect_eq $'   2 3\n 2 4 6\n 3 6 9' "$(./primes 2)"

expect_exit_code 1 ./primes 1 2

expect_exit_code 2 ./primes -1

expect_exit_code 1 ./primes -

make primes-simple >/dev/null 2>&1

expect_eq "$(./primes)" "$(./primes-simple)"

make primes-tmpl >/dev/null 2>&1

expect_eq "$(./primes)" "$(./primes-tmpl)"

echo
echo "[  PASSED  ]"
